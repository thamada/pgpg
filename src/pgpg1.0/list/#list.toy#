#define xsize (4.0)
#define mmin (1.0/1024.0)
#define xoffset (xsize/2.0)
#define xscale (pow(2.0,20.0)/xsize)
#define mscale (pow(2.0,60.0)/mmin)
#define escale (xscale*xscale)
#define fscale (-xscale*xscale/mscale)

#define NPOS 32
#define NLOG 17
#define NMAN 8
#define NFOR 57
#define NACC 64

/NVMP 2
/NPIPE 2
/JPSET xj,0,0,31,x[][0],ufix,NPOS,xscale,xoffset
/JPSET yj,0,32,63,x[][1],ufix,NPOS,xscale,xoffset
/JPSET zj,1,0,31,x[][2],ufix,NPOS,xscale,xoffset
/JPSET mj,1,32,48,m[],log,NLOG,NMAN,mscale
/IPSET xi,x[][0],ufix,NPOS,xscale,xoffset
/IPSET yi,x[][1],ufix,NPOS,xscale,xoffset
/IPSET zi,x[][2],ufix,NPOS,xscale,xoffset
/IPSET ieps2,eps2,log,NLOG,NMAN,escale
/FOSET sx,a[][0],fix,NACC,fscale
/FOSET sy,a[][1],fix,NACC,fscale
/FOSET sz,a[][2],fix,NACC,fscale
	
void target_function(x,m,eps2,a,pot,n)
{
  pg_rundelay(16);

  pg_log_muldiv(MUL,r2,r1,r3,NLOG,1);

  pg_pdelay(mj,mjr,NLOG,12);
  pg_log_muldiv(DIV,mjr,r3,mf,NLOG,1);

  pg_log_muldiv(MUL,mf,dxr,fx,NLOG,1);
  pg_log_muldiv(MUL,mf,dyr,fy,NLOG,1);
  pg_log_muldiv(MUL,mf,dzr,fz,NLOG,1);

  pg_conv_ltof(fx,ffx,NLOG,NMAN,NFOR,2);
  pg_conv_ltof(fy,ffy,NLOG,NMAN,NFOR,2);
  pg_conv_ltof(fz,ffz,NLOG,NMAN,NFOR,2);

  pg_fix_accum(ffx,sx,NFOR,NACC,2,16);
  pg_fix_accum(ffy,sy,NFOR,NACC,2,16);
  pg_fix_accum(ffz,sz,NFOR,NACC,2,16);

}










