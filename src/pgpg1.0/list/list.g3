#define xsize (4.0)
#define mmin (1.0/1024.0)
#define xoffset (xsize/2.0)
#define xscale (pow(2.0,20.0)/xsize)
#define mscale (pow(2.0,60.0)/mmin)
#define escale (xscale*xscale)
#define fscale (-xscale*xscale/mscale)

//NVMP 2
//NPIPE 1
//JPSET xj,0,0,19,x[][0],ufix,xscale,xoffset
//JPSET yj,0,20,39,x[][1],ufix,xscale,xoffset
//JPSET zj,0,40,59,x[][2],ufix,xscale,xoffset
//JPSET mj,1,0,13,m[],log,mscale,14,5
//IPSET xi,20,x[][0],ufix,xscale,xoffset
//IPSET yi,20,x[][1],ufix,xscale,xoffset
//IPSET zi,20,x[][2],ufix,xscale,xoffset
//IPSET ieps2,14,eps2,log,escale,5
//FOSET sx,56,a[][0],fix,fscale
//FOSET sy,56,a[][1],fix,fscale
//FOSET sz,56,a[][2],fix,fscale
	
void force_gravity_on_emulator(x,m,eps2,a,pot,n)
	double x[][3];
	double m[];
	double eps2;
	double a[][3];
	double pot[];
	int n;
{
  pg_rundelay(16);

  pg_fix_addsub(SUB,xi,xj,xij,20,1);
  pg_fix_addsub(SUB,yi,yj,yij,20,1);
  pg_fix_addsub(SUB,zi,zj,zij,20,1);

  pg_conv_ftol(xij,dx,20,14,5,4);
  pg_conv_ftol(yij,dy,20,14,5,4);
  pg_conv_ftol(zij,dz,20,14,5,4);

  pg_pdelay(dx,dxr,14,8);
  pg_pdelay(dy,dyr,14,8);
  pg_pdelay(dz,dzr,14,8);

  pg_log_shift(1,dx,x2,14);
  pg_log_shift(1,dy,y2,14);
  pg_log_shift(1,dz,z2,14);

  pg_pdelay(ieps2,ieps2r,14,5);
  pg_log_unsigned_add(x2,y2,x2y2,14,5,3);
  pg_log_unsigned_add(z2,ieps2r,z2e2,14,5,3);
  pg_log_unsigned_add(x2y2,z2e2,r2,14,5,3);

  pg_log_shift(-1,r2,r1,14);
  pg_log_muldiv(MUL,r2,r1,r3,14,1);

  pg_pdelay(mj,mjr,14,12);
  pg_log_muldiv(DIV,mjr,r3,mf,14,1);

  pg_log_muldiv(MUL,mf,dxr,fx,14,1);
  pg_log_muldiv(MUL,mf,dyr,fy,14,1);
  pg_log_muldiv(MUL,mf,dzr,fz,14,1);

  pg_conv_ltof(fx,ffx,14,5,49,2);
  pg_conv_ltof(fy,ffy,14,5,49,2);
  pg_conv_ltof(fz,ffz,14,5,49,2);

  pg_fix_accum(ffx,sx,49,56,2,16);
  pg_fix_accum(ffy,sy,49,56,2,16);
  pg_fix_accum(ffz,sz,49,56,2,16);

}










